@using BlazorWindowManager.ClassLibrary.Grid
@using Fluxor.Blazor.Web.Components
@using System.Collections.Immutable

@inherits FluxorComponent

@if(_cachedGridBoard is not null)
{
    <div class="bwmt_grid-display">
        GridRecord.GridRecordKey.Id: @GridRecord.GridRecordKey.Id

        @{
            ImmutableArray<GridItemRecord>? previousRow = null;

            for (int i = 0; i < _cachedGridBoard.GridItemRecords.Length; i++)
            {
                var rowIndex = i;
                var row = _cachedGridBoard.GridItemRecords[rowIndex];

                if(previousRow is not null)
                {
                    <div class="bwmt_grid-row-divider-display">
                        row divider goes here
                    </div>
                }

                GridItemRecord? previousGridItemRecord = null;

                <div class="bwmt_grid-row-display">
                    @for(int j = 0; j < row.Length; j++)
                    {
                        var gridItemRecordIndex = j;
                        var gridItemRecord = row[gridItemRecordIndex];

                        if(previousGridItemRecord is not null)
                        {
                            <div class="bwmt_grid-item-divider-display">
                                column divider goes here
                            </div>
                        }

                        <div class="bwmt_grid-item-display">
                            GridItem goes here
                        </div>

                        previousGridItemRecord = gridItemRecord;
                    }
                </div>

                previousRow = row;
            }
        }
    </div>   
}